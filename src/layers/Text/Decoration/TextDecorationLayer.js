// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.js";
import * as TextDecorationLineStyleCssJs from "./Line/TextDecorationLineStyle.css.js";
import * as TextDecorationColorStyleCssJs from "./Color/TextDecorationColorStyle.css.js";
import * as TextDecorationStyleStyleCssJs from "./Style/TextDecorationStyleStyle.css.js";
import * as TextDecorationThicknessStyleCssJs from "./Thickness/TextDecorationThicknessStyle.css.js";

var color = TextDecorationColorStyleCssJs.TextDecorationColorStyle;

var line = TextDecorationLineStyleCssJs.TextDecorationLineStyle;

var style = TextDecorationStyleStyleCssJs.TextDecorationStyleStyle;

var thickness = TextDecorationThicknessStyleCssJs.TextDecorationThicknessStyle;

function resolve(textDecorationColor, textDecorationLine, textDecorationStyle, textDecorationThickness) {
  return Cx.cx([
              textDecorationColor === "secondary" ? color.style.secondary : (
                  textDecorationColor === "primary" ? color.style.primary : (
                      textDecorationColor === "currentColor" ? color.style.currentColor : (
                          textDecorationColor === "black" ? color.style.black : color.style.white
                        )
                    )
                ),
              textDecorationLine === "none" ? line.style.none : (
                  textDecorationLine === "initial" ? line.style.initial : (
                      textDecorationLine === "overline_underline" ? line.style.overline_underline : (
                          textDecorationLine === "underline" ? line.style.underline : (
                              textDecorationLine === "lineThrough_underline" ? line.style.lineThrough_underline : (
                                  textDecorationLine === "lineThrough" ? line.style.lineThrough : (
                                      textDecorationLine === "overline_lineThrough" ? line.style.overline_lineThrough : (
                                          textDecorationLine === "unset" ? line.style.unset : (
                                              textDecorationLine === "inherit" ? line.style.inherit : (
                                                  textDecorationLine === "overline_lineThrough_underline" ? line.style.overline_lineThrough_underline : (
                                                      textDecorationLine === "blink" ? line.style.blink : line.style.overline
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
              textDecorationStyle === "wavy" ? style.style.wavy : (
                  textDecorationStyle === "solid" ? style.style.solid : (
                      textDecorationStyle === "dashed" ? style.style.dashed : (
                          textDecorationStyle === "unset" ? style.style.unset : (
                              textDecorationStyle === "inherit" ? style.style.inherit : (
                                  textDecorationStyle === "dotted" ? style.style.dotted : (
                                      textDecorationStyle === "double" ? style.style.double : style.style.initial
                                    )
                                )
                            )
                        )
                    )
                ),
              textDecorationThickness === "bold" ? thickness.style.bold : (
                  textDecorationThickness === "initial" ? thickness.style.initial : (
                      textDecorationThickness === "thin" ? thickness.style.thin : (
                          textDecorationThickness === "light" ? thickness.style.light : (
                              textDecorationThickness === "medium" ? thickness.style.medium : (
                                  textDecorationThickness === "fromFont" ? thickness.style.fromFont : (
                                      textDecorationThickness === "unset" ? thickness.style.unset : (
                                          textDecorationThickness === "inherit" ? thickness.style.inherit : thickness.style.auto
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            ]);
}

var TextDecorationLayer = {
  resolve: resolve
};

export {
  color ,
  line ,
  style ,
  thickness ,
  TextDecorationLayer ,
  
}
/* color Not a pure module */
