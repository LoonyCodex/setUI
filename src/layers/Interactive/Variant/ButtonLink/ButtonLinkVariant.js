// Generated by ReScript, PLEASE EDIT WITH CARE

import * as VariantReflection from "../VariantReflection.js";

var options = {
  solid: {
    color: "var(--text-color)",
    backgroundColor: "var(--color)",
    borderColor: "var(--color)",
    ":hover": {
      color: "var(--text-color)",
      backgroundColor: "hsl(var(--h) var(--s) calc(var(--l) - 10%) / var(--a))",
      borderColor: "hsl(var(--h) var(--s) calc(var(--l) - 10%) / var(--a))",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":active": {
      color: "var(--text-color)",
      backgroundColor: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      borderColor: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":focus": {
      color: "var(--text-color)",
      backgroundColor: "hsl(var(--h) var(--s) calc(var(--l) - 10%) / var(--a))",
      borderColor: "hsl(var(--h) var(--s) calc(var(--l) - 10%) / var(--a))",
      outlineColor: "hsl(0 0% 100% / .8)",
      outlineStyle: "solid"
    },
    ":disabled": {
      color: "var(--text-color)",
      backgroundColor: "hsl(var(--h) var(--s) var(--l) / .5)",
      borderColor: "hsl(var(--h) var(--s) var(--l) / .5)",
      outlineColor: "inherit",
      outlineStyle: "none"
    }
  },
  ghost: {
    color: "var(--color)",
    backgroundColor: "transparent",
    borderColor: "var(--color)",
    ":hover": {
      color: "hsl(var(--h) var(--s) calc(var(--l) - 10%) / var(--a))",
      backgroundColor: "transparent",
      borderColor: "hsl(var(--h) var(--s) calc(var(--l) - 10%) / var(--a))",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":active": {
      color: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      backgroundColor: "transparent",
      borderColor: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":focus": {
      color: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      backgroundColor: "transparent",
      borderColor: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      outlineColor: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / .5)",
      outlineStyle: "solid"
    },
    ":disabled": {
      color: "hsl(var(--h) var(--s) var(--l) / .5)",
      backgroundColor: "transparent",
      borderColor: "hsl(var(--h) var(--s) var(--l) / .5)",
      outlineColor: "inherit",
      outlineStyle: "none"
    }
  },
  borderless: {
    color: "var(--color)",
    backgroundColor: "hsl(var(--h) var(--s) 90% / var(--a))",
    borderColor: "hsl(var(--h) var(--s) 90% / var(--a))",
    ":hover": {
      color: "var(--color)",
      backgroundColor: "hsl(var(--h) var(--s) 80% / var(--a))",
      borderColor: "hsl(var(--h) var(--s) 80% / var(--a))",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":active": {
      color: "var(--color)",
      backgroundColor: "hsl(var(--h) var(--s) 70% / var(--a))",
      borderColor: "hsl(var(--h) var(--s) 70% / var(--a)))",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":focus": {
      color: "var(--color)",
      backgroundColor: "hsl(var(--h) var(--s) 70% / var(--a))",
      borderColor: "hsl(var(--h) var(--s) 70% / var(--a))",
      outlineColor: "hsl(0 0% 100% / .5)",
      outlineStyle: "solid"
    },
    ":disabled": {
      color: "var(--color)",
      backgroundColor: "transparent",
      borderColor: "hsl(var(--h) var(--s) var(--l) / .5)",
      outlineColor: "inherit",
      outlineStyle: "none"
    }
  },
  text: {
    color: "var(--color)",
    backgroundColor: "transparent",
    borderColor: "transparent",
    ":hover": {
      color: "hsl(var(--h) var(--s) calc(var(--l) - 10%) / var(--a))",
      backgroundColor: "transparent",
      borderColor: "transparent",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":active": {
      color: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      backgroundColor: "transparent",
      borderColor: "transparent",
      outlineColor: "inherit",
      outlineStyle: "none"
    },
    ":focus": {
      color: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / var(--a))",
      backgroundColor: "transparent",
      borderColor: "transparent",
      outlineColor: "hsl(var(--h) var(--s) calc(var(--l) - 20%) / .5)",
      outlineStyle: "solid"
    },
    ":disabled": {
      color: "hsl(var(--h) var(--s) var(--l) / .5)",
      backgroundColor: "transparent",
      borderColor: "transparent",
      outlineColor: "inherit",
      outlineStyle: "none"
    }
  }
};

var ButtonLinkVariant_key = VariantReflection.VariantReflection.key;

var ButtonLinkVariant_initial = VariantReflection.VariantReflection.initial;

var ButtonLinkVariant = {
  key: ButtonLinkVariant_key,
  initial: ButtonLinkVariant_initial,
  options: options
};

export {
  ButtonLinkVariant ,
  
}
/* No side effect */
